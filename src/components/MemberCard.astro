---
export interface Props {
  name: string;
  currentRole: string;
  img: string;
  email?: string;
  projectDescriptionEn: string;
  projectDescriptionEs?: string;
  profiles: {
    orcid?: string;
    linkedin?: string;
  };
}

const {
  name,
  currentRole,
  img,
  email,
  projectDescriptionEn,
  projectDescriptionEs,
  profiles,
} = Astro.props;
---

<div
  class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300 h-full flex flex-col"
>
  <!-- Contenedor de imagen con aspect ratio fijo -->
  <div class="aspect-square w-full overflow-hidden bg-gray-200">
    <img
      src={img}
      alt={`Foto de ${name}`}
      class="w-full h-full object-cover object-center transition-transform duration-300 hover:scale-105"
      loading="lazy"
    />
  </div>

  <!-- Contenido de texto -->
  <div class="p-4 flex-1 flex flex-col">
    <h3 class="text-lg font-semibold text-gray-900 mb-2">{name}</h3>
    <p class="text-sm text-blue-600 mb-3 font-medium leading-tight">
      {currentRole}
    </p>

    <!-- Email -->
    {
      email && (
        <div class="mb-3">
          <a
            href={`mailto:${email}`}
            class="inline-flex items-center text-sm text-gray-600 hover:text-blue-600 transition-colors duration-200"
            title="Send email"
          >
            <svg
              class="w-4 h-4 mr-1"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
              />
            </svg>
            {email}
          </a>
        </div>
      )
    }

    <!-- Descripción del proyecto -->
    <div class="mb-4 flex-1">
      <div class="text-sm text-gray-600">
        <p
          class="leading-relaxed description-text"
          id={`desc-${name.replace(/\s+/g, "-").toLowerCase()}`}
        >
          {
            projectDescriptionEn.length > 180
              ? projectDescriptionEn.substring(0, 180) + "..."
              : projectDescriptionEn
          }
        </p>
        {
          projectDescriptionEn.length > 180 && (
            <button
              class="text-blue-600 hover:text-blue-800 text-sm font-medium mt-2 transition-colors duration-200 show-more-btn"
              data-full-text={projectDescriptionEn}
              data-short-text={projectDescriptionEn.substring(0, 180) + "..."}
              data-target={`desc-${name.replace(/\s+/g, "-").toLowerCase()}`}
            >
              Show more
            </button>
          )
        }
      </div>
    </div>

    <!-- Enlaces de perfil -->
    <div class="flex gap-3 items-center mt-auto">
      {
        profiles.orcid && (
          <a
            href={profiles.orcid}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center text-green-600 hover:text-green-800 text-sm font-medium transition-colors duration-200"
            title="ORCID Profile"
          >
            <svg class="w-4 h-4 mr-1" viewBox="0 0 24 24" fill="currentColor">
              <path d="M12 0C5.372 0 0 5.372 0 12s5.372 12 12 12 12-5.372 12-12S18.628 0 12 0zM7.369 4.378c.525 0 .947.431.947.947 0 .525-.422.947-.947.947-.525 0-.946-.422-.946-.947 0-.525.421-.947.946-.947zm-.722 3.038h1.444v10.041H6.647V7.416zm3.562 0h3.9c3.712 0 5.344 2.653 5.344 5.025 0 2.578-2.016 5.016-5.325 5.016h-3.919V7.416zm1.444 1.303v7.444h2.297c2.359 0 3.781-1.422 3.781-3.731 0-2.122-1.422-3.713-3.781-3.713h-2.297z" />
            </svg>
            ORCID
          </a>
        )
      }

      {
        profiles.linkedin && (
          <a
            href={profiles.linkedin}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center text-blue-700 hover:text-blue-900 text-sm font-medium transition-colors duration-200"
            title="LinkedIn Profile"
          >
            <svg class="w-4 h-4 mr-1" viewBox="0 0 24 24" fill="currentColor">
              <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z" />
            </svg>
            LinkedIn
          </a>
        )
      }
    </div>
  </div>
</div>

<script>
  // Función para manejar el botón "Show more/Show less"
  function handleShowMoreButtons() {
    const buttons = document.querySelectorAll(
      ".show-more-btn"
    ) as NodeListOf<HTMLButtonElement>;

    buttons.forEach((button: HTMLButtonElement) => {
      button.addEventListener("click", function (this: HTMLButtonElement) {
        const targetId = this.dataset.target;
        if (!targetId) return;

        const targetElement = document.getElementById(targetId);
        if (!targetElement) return;

        const fullText = this.dataset.fullText;
        const shortText = this.dataset.shortText;

        if (!fullText || !shortText) return;

        if (this.textContent === "Show more") {
          targetElement.textContent = fullText;
          this.textContent = "Show less";
        } else {
          targetElement.textContent = shortText;
          this.textContent = "Show more";
        }
      });
    });
  }

  // Ejecutar cuando el DOM esté listo
  document.addEventListener("DOMContentLoaded", handleShowMoreButtons);

  // Re-ejecutar si el contenido se actualiza dinámicamente
  document.addEventListener("astro:page-load", handleShowMoreButtons);
</script>
