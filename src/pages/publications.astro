---
import DefaultLayout from "../layouts/DefaultLayout.astro";

interface Publication {
  title: string;
  authors: string[];
  journal: string;
  year: number;
  bibcode: string;
  abstract: string;
  fullAbstract?: string;
  doi?: string;
  arxiv?: string;
  keywords?: string[];
  publicationDate?: string;
  comments?: string;
  citationCount?: number;
  graphics?: Array<{
    url: string;
    caption: string;
  }>;
  link: string;
}

const LIBRARY_ID = "q7ce2driS9W-SkN3IcOqNA";
---

<DefaultLayout>
  <div class="mb-8">
    <h2 class="text-3xl font-bold mb-4">Publications</h2>
    <p class="text-gray-600 mb-6">
      Our research publications on Fast Radio Bursts, machine learning, and
      radio astronomy. You can also view our complete publication list on
      <a
        href={`https://ui.adsabs.harvard.edu/public-libraries/${LIBRARY_ID}`}
        target="_blank"
        class="text-blue-600 hover:underline font-medium"
      >
        ADS (Astrophysics Data System)
      </a>
    </p>
  </div>

  <!-- Publications container with pagination -->
  <div id="publications-container" class="space-y-6">
    <div class="flex justify-center items-center py-8">
      <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600">
      </div>
      <p class="text-gray-500 ml-3">Loading publications...</p>
    </div>
  </div>

  <!-- Pagination controls -->
  <div id="pagination-container" class="mt-8 hidden">
    <div class="flex justify-center items-center space-x-2">
      <button
        id="prev-btn"
        class="px-4 py-2 bg-white border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 hover:border-gray-400 transition-colors disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-white disabled:hover:border-gray-300"
        disabled
      >
        <svg
          class="w-4 h-4 inline mr-1"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M15 19l-7-7 7-7"></path>
        </svg>
        Previous
      </button>

      <div id="page-numbers" class="flex space-x-1">
        <!-- Page numbers will be inserted here -->
      </div>

      <button
        id="next-btn"
        class="px-4 py-2 bg-blue-700 text-white rounded-md hover:bg-blue-800 transition-colors disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-blue-700"
      >
        Next
        <svg
          class="w-4 h-4 inline ml-1"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 5l7 7-7 7"></path>
        </svg>
      </button>
    </div>

    <div class="text-center mt-4">
      <span id="page-info" class="text-sm text-gray-600"></span>
    </div>
  </div>

  <script>
    interface Publication {
      title: string;
      authors: string[];
      journal: string;
      year: number;
      bibcode: string;
      abstract: string;
      fullAbstract?: string;
      doi?: string;
      arxiv?: string;
      keywords?: string[];
      publicationDate?: string;
      comments?: string;
      citationCount?: number;
      graphics?: Array<{
        url: string;
        caption: string;
      }>;
      link: string;
    }

    // Pagination state
    let allPublications: Publication[] = [];
    let currentPage = 1;
    const itemsPerPage = 5;

    // Color theme - Professional and sober
    const professionalTheme = {
      bg: "bg-slate-50",
      border: "border-slate-200",
      accent: "text-slate-700",
      yearBg: "bg-slate-100",
      primary: "text-blue-700",
      primaryBg: "bg-blue-50",
    };

    // Member profiles mapping - Updated with all current team members
    const memberProfiles: { [key: string]: string } = {
      "Cruces, M.": "#dr-marilyn-cruces",
      "Braga, C.": "#cristobal-braga",
      "Braga, C. A.": "#cristobal-braga",
      "Vera-Casanova, J.": "#josefina-vera-casanova",
      "Pizarro, I.": "#irma-pizarro",
      "Bermedo, N.": "#nicolas-bermedo",
      "Espinoza, C.": "#constanza-espinoza-dupouy",
      "Espinoza-Dupouy, C.": "#constanza-espinoza-dupouy",
      "Rodriguez, L.": "#luis",
      "Cabiac, E.": "#etienne-cabiac",
      "Florez, V.": "#vicente-florez",
      "Sanchez, J. J.": "#juan-jose-sanchez",
      "Beckerf, L.": "#lucas",
      "Bermudez, E.": "#emiliano",
    };

    function formatAuthors(authors: string[]): string {
      if (!authors || authors.length === 0) return "";

      // Updated list of RatLab members with more flexible matching patterns
      const ratLabMembers = [
        "Cruces, M.",
        "Marilyn Cruces",
        "M. Cruces",
        "Braga, C.",
        "Braga, C. A.",
        "Cristobal Braga",
        "C. Braga",
        "C. A. Braga",
        "Vera-Casanova, J.",
        "Josefina Vera",
        "J. Vera",
        "Vera-Casanova",
        "Pizarro, I.",
        "Irma Pizarro",
        "I. Pizarro",
        "Bermedo, N.",
        "Nicolas Bermedo",
        "N. Bermedo",
        "Espinoza, C.",
        "Espinoza-Dupouy, C.",
        "Constanza Espinoza",
        "C. Espinoza",
        "Rodriguez, L.",
        "Luis Rodriguez",
        "L. Rodriguez",
        "L. S. Rodriguez",
        "Cabiac, E.",
        "Etienne Cabiac",
        "E. Cabiac",
        "Florez, V.",
        "Vicente Florez",
        "V. Florez",
        "Sanchez, J. J.",
        "Juan Jose Sanchez",
        "J. J. Sanchez",
        "Beckerf, L.",
        "Lucas Beckerf",
        "L. Beckerf",
        "Bermudez, E.",
        "Emiliano Bermudez",
        "E. Bermudez",
      ];

      const formattedAuthors = authors.slice(0, 8).map((author) => {
        // More flexible matching - check if any ratlab member pattern matches the author
        const matchedMember = ratLabMembers.find((member) => {
          const authorLower = author.toLowerCase().trim();
          const memberLower = member.toLowerCase().trim();

          // Exact match
          if (authorLower === memberLower) return true;

          // Check if author contains member pattern
          if (authorLower.includes(memberLower)) return true;

          // Check if member contains author pattern
          if (memberLower.includes(authorLower)) return true;

          // Special case for hyphenated names and initials
          const authorParts = authorLower
            .split(/[,\s\-\.]+/)
            .filter((p) => p.length > 0);
          const memberParts = memberLower
            .split(/[,\s\-\.]+/)
            .filter((p) => p.length > 0);

          // Check if main surname matches
          if (authorParts.length > 0 && memberParts.length > 0) {
            const authorSurname = authorParts[0];
            const memberSurname = memberParts[0];
            if (
              authorSurname === memberSurname &&
              authorParts.length >= 2 &&
              memberParts.length >= 2
            ) {
              const authorInitial = authorParts[1].charAt(0);
              const memberInitial = memberParts[1].charAt(0);
              if (authorInitial === memberInitial) return true;
            }
          }

          return false;
        });

        if (matchedMember) {
          // Find the canonical form for the profile link
          const canonicalKey = Object.keys(memberProfiles).find((key) => {
            const keyLower = key.toLowerCase();
            const matchedLower = matchedMember.toLowerCase();
            return (
              keyLower === matchedLower ||
              keyLower.includes(matchedLower) ||
              matchedLower.includes(keyLower)
            );
          });

          if (canonicalKey) {
            const profileId = memberProfiles[canonicalKey];
            return `<a href="/members${profileId}" class="font-semibold text-blue-700 hover:text-blue-900 hover:underline bg-blue-50 px-2 py-1 rounded transition-all duration-200">${author}</a>`;
          }
        }

        return author;
      });

      if (authors.length > 8) {
        formattedAuthors.push(
          `<span class="text-gray-500 italic">... and ${authors.length - 8} more</span>`
        );
      }

      return formattedAuthors.join(", ");
    }

    function truncateAbstract(
      abstract: string,
      maxLength: number = 250
    ): string {
      if (!abstract || abstract.length <= maxLength)
        return cleanAbstractText(abstract);
      return cleanAbstractText(abstract.substring(0, maxLength).trim()) + "...";
    }

    function cleanAbstractText(text: string): string {
      if (!text) return "";

      // Limpiar caracteres especiales mal codificados y fórmulas matemáticas problemáticas
      return text
        .replace(/\$[^$]*\$/g, "") // Quitar fórmulas LaTeX entre $...$
        .replace(/\\[a-zA-Z]+\{[^}]*\}/g, "") // Quitar comandos LaTeX
        .replace(/[\\${}]/g, "") // Quitar caracteres especiales restantes
        .replace(/\s+/g, " ") // Normalizar espacios
        .trim();
    }

    function formatPublicationDate(dateString: string): string {
      if (!dateString) return "";

      // Si la fecha contiene "00" como día, extraer solo año y mes
      if (dateString.includes("-00")) {
        const parts = dateString.split("-");
        if (parts.length >= 2) {
          const year = parts[0];
          const month = parts[1];
          const monthNames = [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ];
          const monthIndex = parseInt(month) - 1;
          if (monthIndex >= 0 && monthIndex < 12) {
            return `${monthNames[monthIndex]} ${year}`;
          }
          return year;
        }
      }

      // Si ya está en formato "Month Year", devolverlo tal como está
      return dateString;
    }

    function renderPublications() {
      const container = document.getElementById("publications-container");
      if (!container) return;

      const startIndex = (currentPage - 1) * itemsPerPage;
      const endIndex = startIndex + itemsPerPage;
      const currentPublications = allPublications.slice(startIndex, endIndex);

      if (currentPublications.length === 0) {
        container.innerHTML =
          '<p class="text-gray-500 text-center py-8">No publications found.</p>';
        return;
      }

      container.innerHTML = currentPublications
        .map((pub: Publication, index: number) => {
          const publicationId = `pub-${(currentPage - 1) * itemsPerPage + index}`;
          const hasFullAbstract =
            pub.fullAbstract && pub.fullAbstract !== pub.abstract;

          return `
          <article class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 hover:shadow-md transition-all duration-200 hover:border-blue-200" id="${publicationId}">
            <!-- Header with title and year -->
            <div class="mb-5">
              <div class="flex justify-between items-start mb-3">
                <h3 class="text-xl font-bold text-gray-900 flex-1 pr-4 leading-tight">
                  <a href="${pub.link}" target="_blank" class="hover:text-blue-700 transition-colors duration-200">
                    ${pub.title}
                  </a>
                </h3>
                ${pub.year ? `<span class="text-sm font-semibold text-blue-700 bg-blue-50 px-3 py-1 rounded-full border border-blue-200">${pub.year}</span>` : ""}
              </div>
              
              <!-- Authors -->
              ${
                pub.authors && pub.authors.length > 0
                  ? `
                <div class="mb-4 p-4 bg-gray-50 rounded-md border-l-4 border-blue-500">
                  <div class="flex items-start">
                    <svg class="w-4 h-4 mt-0.5 mr-2 text-gray-600" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"/>
                    </svg>
                    <div class="flex-1">
                      <span class="font-semibold text-gray-900 text-sm">Authors:</span>
                      <div class="mt-1 text-sm text-gray-700 leading-relaxed">${formatAuthors(pub.authors)}</div>
                    </div>
                  </div>
                </div>
              `
                  : ""
              }

              <!-- Publication Details Row -->
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                <!-- Journal and Date -->
                <div class="space-y-2">
                  ${
                    pub.journal
                      ? `
                    <div class="flex items-center">
                      <svg class="w-4 h-4 mr-2 text-gray-600" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h8a2 2 0 012 2v12a1 1 0 110 2h-3a1 1 0 01-1-1v-2a1 1 0 00-1-1H9a1 1 0 00-1 1v2a1 1 0 01-1 1H4a1 1 0 110-2V4zm3 1h2v2H7V5zm2 4H7v2h2V9zm2-4h2v2h-2V5zm2 4h-2v2h2V9z" clip-rule="evenodd"/>
                      </svg>
                      <span class="text-sm font-medium text-gray-900">${pub.journal}</span>
                    </div>
                  `
                      : ""
                  }
                  ${
                    pub.publicationDate
                      ? `
                    <div class="flex items-center">
                      <svg class="w-4 h-4 mr-2 text-gray-600" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
                      </svg>
                      <span class="text-sm text-gray-700">${formatPublicationDate(pub.publicationDate)}</span>
                    </div>
                  `
                      : ""
                  }
                </div>

                <!-- Identifiers -->
                <div class="space-y-2">
                  ${
                    pub.doi
                      ? `
                    <div class="flex items-center">
                      <span class="text-xs font-semibold text-gray-500 mr-2 w-12">DOI:</span>
                      <a href="https://doi.org/${pub.doi}" target="_blank" class="text-sm text-blue-700 hover:underline font-mono">${pub.doi}</a>
                    </div>
                  `
                      : ""
                  }
                  ${
                    pub.arxiv
                      ? `
                    <div class="flex items-center">
                      <span class="text-xs font-semibold text-gray-500 mr-2 w-12">arXiv:</span>
                      <a href="https://arxiv.org/abs/${pub.arxiv}" target="_blank" class="text-sm text-blue-700 hover:underline font-mono">${pub.arxiv}</a>
                    </div>
                  `
                      : ""
                  }
                  ${
                    pub.bibcode
                      ? `
                    <div class="flex items-center">
                      <span class="text-xs font-semibold text-gray-500 mr-2 w-12">ADS:</span>
                      <span class="text-sm text-gray-600 font-mono">${pub.bibcode}</span>
                    </div>
                  `
                      : ""
                  }
                </div>
              </div>
            </div>
            
            <!-- Abstract -->
            ${
              pub.abstract
                ? `
              <div class="mb-5 p-4 bg-slate-50 rounded-md border">
                <div class="flex items-start">
                  <svg class="w-4 h-4 mt-0.5 mr-2 text-slate-600 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"/>
                  </svg>
                  <div class="flex-1">
                    <h4 class="text-sm font-semibold text-slate-800 mb-2">Abstract</h4>
                    <div id="abstract-${publicationId}" class="text-sm text-slate-700 leading-relaxed">
                      ${truncateAbstract(pub.abstract)}
                    </div>
                    ${
                      hasFullAbstract
                        ? `
                      <div id="full-abstract-${publicationId}" class="text-sm text-slate-700 leading-relaxed hidden">
                        ${cleanAbstractText(pub.fullAbstract || "")}
                      </div>
                      <button 
                        id="toggle-abstract-${publicationId}"
                        onclick="toggleAbstract('${publicationId}')"
                        class="mt-2 text-blue-700 hover:text-blue-900 hover:underline text-sm font-medium transition-colors"
                      >
                        Show full abstract
                      </button>
                    `
                        : ""
                    }
                  </div>
                </div>
              </div>
            `
                : ""
            }

            <!-- Keywords -->
            ${
              pub.keywords && pub.keywords.length > 0
                ? `
              <div class="mb-4 p-3 bg-blue-50 rounded-md border border-blue-200">
                <div class="flex items-start">
                  <svg class="w-4 h-4 mt-0.5 mr-2 text-blue-600" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd"/>
                  </svg>
                  <div>
                    <span class="text-sm font-semibold text-blue-900 mb-1 block">Keywords:</span>
                    <div class="flex flex-wrap gap-1">
                      ${pub.keywords
                        .map(
                          (keyword) => `
                        <span class="inline-block px-2 py-1 text-xs font-medium bg-white text-blue-800 border border-blue-300 rounded-full">
                          ${keyword}
                        </span>
                      `
                        )
                        .join("")}
                    </div>
                  </div>
                </div>
              </div>
            `
                : ""
            }

            <!-- Comments -->
            ${
              pub.comments
                ? `
              <div class="mb-4 p-3 bg-yellow-50 rounded-md border border-yellow-200">
                <div class="flex items-start">
                  <svg class="w-4 h-4 mt-0.5 mr-2 text-yellow-600" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z" clip-rule="evenodd"/>
                  </svg>
                  <div>
                    <span class="text-sm font-semibold text-yellow-900 mb-1 block">Comments:</span>
                    <p class="text-sm text-yellow-800">${pub.comments}</p>
                  </div>
                </div>
              </div>
            `
                : ""
            }

            <!-- Graphics/Figures -->
            ${
              pub.graphics && pub.graphics.length > 0
                ? `
              <div class="mb-5 p-4 bg-green-50 rounded-md border border-green-200">
                <div class="flex items-start mb-3">
                  <svg class="w-4 h-4 mt-0.5 mr-2 text-green-600" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd"/>
                  </svg>
                  <span class="text-sm font-semibold text-green-900">Figures & Graphics:</span>
                </div>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                  ${pub.graphics
                    .map(
                      (graphic, idx) => `
                    <div class="bg-white p-3 rounded border border-green-300">
                      <img 
                        src="${graphic.url}" 
                        alt="${graphic.caption}"
                        class="w-full h-32 object-cover rounded cursor-pointer hover:opacity-90 transition-opacity"
                        onclick="openImageModal('${graphic.url}', '${graphic.caption.replace(/'/g, "\\'")}', '${pub.title.replace(/'/g, "\\'")}')"
                      />
                      <p class="text-xs text-green-800 mt-2 leading-tight">${graphic.caption}</p>
                    </div>
                  `
                    )
                    .join("")}
                </div>
              </div>
            `
                : ""
            }
            
            <!-- Footer with links -->
            <div class="flex justify-end items-center pt-4 border-t border-gray-200">
              <div class="flex items-center space-x-2">
                ${
                  pub.doi
                    ? `
                  <a 
                    href="https://doi.org/${pub.doi}" 
                    target="_blank" 
                    class="inline-flex items-center px-3 py-1.5 text-xs font-medium text-gray-700 bg-white border border-gray-300 rounded hover:bg-gray-50 transition-colors"
                    title="View on publisher's website"
                  >
                    DOI
                  </a>
                `
                    : ""
                }
                ${
                  pub.arxiv
                    ? `
                  <a 
                    href="https://arxiv.org/abs/${pub.arxiv}" 
                    target="_blank" 
                    class="inline-flex items-center px-3 py-1.5 text-xs font-medium text-red-700 bg-red-50 border border-red-200 rounded hover:bg-red-100 transition-colors"
                    title="View on arXiv"
                  >
                    arXiv
                  </a>
                `
                    : ""
                }
                <a 
                  href="${pub.link}" 
                  target="_blank" 
                  class="inline-flex items-center px-4 py-2 text-blue-700 bg-white border border-blue-300 rounded-md font-medium transition-all duration-200 hover:bg-blue-50 hover:border-blue-400 hover:shadow-sm"
                >
                  <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                  </svg>
                  View on ADS
                </a>
              </div>
            </div>
          </article>
        `;
        })
        .join("");

      updatePaginationControls();
    }

    function updatePaginationControls() {
      const totalPages = Math.ceil(allPublications.length / itemsPerPage);
      const paginationContainer = document.getElementById(
        "pagination-container"
      );
      const pageNumbers = document.getElementById("page-numbers");
      const pageInfo = document.getElementById("page-info");
      const prevBtn = document.getElementById("prev-btn") as HTMLButtonElement;
      const nextBtn = document.getElementById("next-btn") as HTMLButtonElement;

      if (
        !paginationContainer ||
        !pageNumbers ||
        !pageInfo ||
        !prevBtn ||
        !nextBtn
      )
        return;

      // Show pagination only if more than one page
      if (totalPages > 1) {
        paginationContainer.classList.remove("hidden");
      } else {
        paginationContainer.classList.add("hidden");
        return;
      }

      // Update buttons
      prevBtn.disabled = currentPage === 1;
      nextBtn.disabled = currentPage === totalPages;

      // Update page numbers
      pageNumbers.innerHTML = "";
      const maxVisiblePages = 5;
      let startPage = Math.max(
        1,
        currentPage - Math.floor(maxVisiblePages / 2)
      );
      let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);

      if (endPage - startPage + 1 < maxVisiblePages) {
        startPage = Math.max(1, endPage - maxVisiblePages + 1);
      }

      for (let i = startPage; i <= endPage; i++) {
        const pageBtn = document.createElement("button");
        pageBtn.textContent = i.toString();
        pageBtn.className =
          i === currentPage
            ? "px-3 py-2 bg-blue-700 text-white rounded-md font-medium border border-blue-700"
            : "px-3 py-2 bg-white text-gray-700 rounded-md hover:bg-gray-50 transition-colors border border-gray-300 hover:border-gray-400";

        pageBtn.addEventListener("click", () => {
          currentPage = i;
          renderPublications();
          window.scrollTo({ top: 0, behavior: "smooth" });
        });

        pageNumbers.appendChild(pageBtn);
      }

      // Update page info
      const startItem = (currentPage - 1) * itemsPerPage + 1;
      const endItem = Math.min(
        currentPage * itemsPerPage,
        allPublications.length
      );
      pageInfo.textContent = `Showing ${startItem}-${endItem} of ${allPublications.length} publications`;

      // Add event listeners to prev/next buttons
      prevBtn.onclick = () => {
        if (currentPage > 1) {
          currentPage--;
          renderPublications();
          window.scrollTo({ top: 0, behavior: "smooth" });
        }
      };

      nextBtn.onclick = () => {
        if (currentPage < totalPages) {
          currentPage++;
          renderPublications();
          window.scrollTo({ top: 0, behavior: "smooth" });
        }
      };
    }

    // Toggle abstract function
    function toggleAbstract(publicationId: string) {
      const shortAbstract = document.getElementById(
        `abstract-${publicationId}`
      );
      const fullAbstract = document.getElementById(
        `full-abstract-${publicationId}`
      );
      const toggleBtn = document.getElementById(
        `toggle-abstract-${publicationId}`
      );

      if (!shortAbstract || !fullAbstract || !toggleBtn) return;

      const isShowingFull = !fullAbstract.classList.contains("hidden");

      if (isShowingFull) {
        fullAbstract.classList.add("hidden");
        shortAbstract.classList.remove("hidden");
        toggleBtn.textContent = "Show full abstract";
      } else {
        shortAbstract.classList.add("hidden");
        fullAbstract.classList.remove("hidden");
        toggleBtn.textContent = "Show less";
      }
    }

    // Image modal function
    function openImageModal(
      imageUrl: string,
      caption: string,
      publicationTitle: string
    ) {
      // Create modal backdrop
      const modal = document.createElement("div");
      modal.className =
        "fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4";
      modal.onclick = () => document.body.removeChild(modal);

      // Create modal content
      const modalContent = document.createElement("div");
      modalContent.className =
        "bg-white rounded-lg max-w-4xl max-h-full overflow-auto";
      modalContent.onclick = (e) => e.stopPropagation();

      modalContent.innerHTML = `
        <div class="p-6">
          <div class="flex justify-between items-start mb-4">
            <div>
              <h3 class="text-lg font-semibold text-gray-900 mb-1">${publicationTitle}</h3>
              <p class="text-sm text-gray-600">${caption}</p>
            </div>
            <button 
              onclick="document.body.removeChild(document.querySelector('.fixed.inset-0'))"
              class="text-gray-400 hover:text-gray-600 transition-colors ml-4"
            >
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
              </svg>
            </button>
          </div>
          <img 
            src="${imageUrl}" 
            alt="${caption}"
            class="w-full h-auto rounded border"
          />
        </div>
      `;

      modal.appendChild(modalContent);
      document.body.appendChild(modal);
    }

    // Make functions globally available
    (window as any).toggleAbstract = toggleAbstract;
    (window as any).openImageModal = openImageModal;

    async function loadPublications() {
      const container = document.getElementById("publications-container");

      if (!container) {
        console.error("Publications container not found");
        return;
      }

      try {
        const response = await fetch("/api/publications");
        const publications: Publication[] = await response.json();

        if ("error" in publications) {
          throw new Error((publications as any).error);
        }

        allPublications = publications;
        currentPage = 1;
        renderPublications();
      } catch (error) {
        container.innerHTML = `
          <div class="bg-red-100 border-l-4 border-red-500 text-red-700 px-6 py-4 rounded-lg shadow-md">
            <div class="flex items-center">
              <svg class="w-6 h-6 mr-3 text-red-500" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
              </svg>
              <div>
                <strong class="font-bold">Error:</strong> 
                <span>Failed to load publications. Please try again later.</span>
              </div>
            </div>
          </div>`;
      }
    }

    loadPublications();
  </script>
</DefaultLayout>
